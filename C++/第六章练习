6.3:
#include<iostream>

using namespace std;

int fact(int i){
    int ret = 1;
    while(i>1)
    {
        ret *= i;
        i--;
    }
    return ret;
}
int main(){
    int j = 5;
    cout<<fact(j)<<endl;
    return 0;
}

6.4:
#include<iostream>

using namespace std;

int fact(int i){
    int ret = 1;
    while(i>1)
    {
        ret *= i;
        i--;
    }
    return ret;
}
int main(){
    int j;
    cout<<"Input an integer in order to calculate its fact:"<<endl;
    cin>>j;
    cout<<fact(j)<<endl;
    return 0;
}

6.5:
#include<iostream>

using namespace std;

int abs(int i){
    int abs_i = (i >= 0) ? i : -i;
    return abs_i;
}
int main(){
    int j;
    cin>>j;
    cout<<abs(j)<<endl;
    return 0;
}

6.7:
#include<iostream>

using namespace std;

int count(){
    static int cnt = -1;
    ++cnt;
    return cnt;
    
}
int main(){
    int i = 0,counts = 0;
    while (i < 10)
    {
        counts = count();
        cout<<counts<<endl;
        ++i;
    }
}

6.10:
#include<iostream>

using namespace std;

void swop(int *i,int *j){
    int t = 0;
    t = *j;
    *j = *i;
    *i = t;
}
int main(){
    int a = 1;
    int b = 2;
    swop(&a, &b);
    cout<<a<<endl;
    cout<<b<<endl;
}

6.11:
#include<iostream>

using namespace std;

void reset(int &i){
    i = 0;
}

int main(){
    int a = 1;
    int b = 2;
    reset(a);
    reset(b);
    cout<<a<<endl;
    cout<<b<<endl;
}

6.12:
#include<iostream>

using namespace std;

void swop(int &i, int &j){
    int t = 0;
    t = j;
    j = i;
    i = t;
}

int main(){
    int a = 1;
    int b = 2;
    swop(a,b);
    cout<<a<<endl;
    cout<<b<<endl;
}

6.17:
#include<iostream>

using namespace std;

bool is_upper(const string s){
    bool a = false;
    auto i = begin(s);
    while(a != true && i != end(s))
    {
        a = isupper(*i);
        ++i;
    }
    return a;
}

int main(){
    string a;
    cin>>a;
    cout<<is_upper(a)<<endl;
}

#include<iostream>

using namespace std;

string to_lower(string &s){
    for (auto i = begin(s);i != end(s);i++)
    {
        *i = tolower(*i);
    }
    return s;
}

int main(){
    string a;
    cin>>a;
    cout<<to_lower(a)<<endl;
}

6.22:
#include<iostream>

using namespace std;

void swop(int &a,int &b){
    auto c = b;
    b = a;
    a = c;
}

int main(){
    int a = 5;
    int b = 7;
    int *c = &a;
    int *d = &b;
    swop(*c,*d);
    cout<<*c<<endl;
    cout<<*d<<endl;
}

6.27:
#include<iostream>

using namespace std;

int sum(initializer_list<int> lst){
    int s = 0;
    for(auto i = lst.begin();i != lst.end();++i)
    {
        s += *i;
    }
    return s;
}

int main(){
    initializer_list<int> a{1,2,3,4,5,6,7,8,9};
    cout<<sum(a)<<endl;
}

6.33:
#include<iostream>
#include<vector>

using namespace std;

void vector_out(vector<int>::iterator beg,vector<int>::iterator v_end){
    if (beg != v_end)
    {
        cout<<*beg<<endl;
        return vector_out(++beg, v_end);
    }
}

int main(){
    vector<int> a{1,2,3,4,5,6,7,8,9};
    vector_out(a.begin(),a.end());
}

6.36:
#include<iostream>

using namespace std;

string (*arr_out(string i[10]))[10];

int main(){
    return 0;
}

6.37:
#include<iostream>

using namespace std;
typedef string str_arr[10];

str_arr *arr_out(string i[10]);

int main(){
    return 0;
}

#include<iostream>

using namespace std;

auto arr_out(string i[10]) -> string(*)[10];

int main(){
    return 0;
}

#include<iostream>

using namespace std;
string i[10];

decltype(i) *arr_out(string i[10]);

int main(){
    return 0;
}

6.42:
#include<iostream>

using namespace std;

string make_plural(size_t ctr,const string &a,const string &b = "s")
{
    return (ctr > 1) ? a+b : a;
}

int main(){
    cout<<make_plural(2, "success","es")<<endl;
    cout<<make_plural(2,"failure")<<endl;
    return 0;
}

6.44:
#include<iostream>

using namespace std;

inline bool isShorter(const string &a,const string &b)
{
    return a.size()<b.size();
}

int main(){
    string s1 = "sadfsdf";
    string s2 = "sdjj";
    cout<<isShorter(s1, s2)<<endl;
    return 0;
}

6.47:
#include<iostream>
#include<vector>
#include<cassert>

using namespace std;

void vector_out(vector<int>::iterator bgn,vector<int>::iterator v_end)
{
#ifndef NDEBUG
    cerr<<v_end - bgn<<" "<<__func__<<" "<<__LINE__<<" "<<__TIME__<<" "<<__DATE__<<endl;
#endif
    while(bgn!=v_end){
        cout<<*bgn<<endl;
        ++bgn;
    }
}

int main(){
    vector<int> i {1,2,3,4,5,6,7,8};
    vector_out(i.begin(), i.end());
    return 0;
}

6.54:
#include<iostream>
#include<vector>

using namespace std;

int (*func)(int a,int b);

int main(){
    vector<int(*)(int,int)> i{func};
    return 0;
}

6.55:
#include<iostream>
#include<vector>

using namespace std;

int (*func)(int a,int b);

int pls(int a,int b){return a+b;}

int mins(int a,int b){return a-b;}

int multiply(int a,int b){return a*b;}

int divide(int a,int b){return a/b;}

int main(){
    vector<int(*)(int,int)> i{(*pls),(*mins),(*multiply),(*divide)};
    return 0;
}

6.56:
#include<iostream>
#include<vector>

using namespace std;

int pls(int a,int b){return a+b;}

int mins(int a,int b){return a-b;}

int multiply(int a,int b){return a*b;}

int divide(int a,int b){return a/b;}

int main(){
    int a = 8,b = 4;
    vector<int(*)(int,int)> i{(*pls),(*mins),(*multiply),(*divide)};
    for(auto j:i)
    {
        cout<<j(a,b)<<endl;
    }
    return 0;
}
