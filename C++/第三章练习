3.1:略

3.2:#include <iostream>
#include <string>
using namespace std;

int main ()
{
  string a;
  while(getline(cin,a))
  {
      cout<<a<<endl;
  }
}
修改：
#include <iostream>
#include <string>
using namespace std;

int main ()
{
  string a;
  while(cin>>a)
  {
      cout<<a<<endl;
  }
}

3.3:string输入运算符将开头空白忽略，结尾空白作为终止信号；
getline函数将空白写入字符串，换行符号作为终止信号；

3.4:
#include <iostream>
#include <string>
using namespace std;

int main ()
{
  string a,b;
  cin>>a>>b;
  if(a>b)
  {
    cout<<a<<endl;    
  }
  else if(b>a)
  {
    cout<<b<<endl;
  }
  else
  {
    cout<<"Two strings are equal."<<endl;
  }
} 
修改后：
#include <iostream>
#include <string>
using namespace std;

int main ()
{
  string a,b;
  cin>>a>>b;
  if(a.size()>b.size())
  {
    cout<<a<<endl;    
  }
  else if(b.size()>a.size())
  {
    cout<<b<<endl;
  }
  else
  {
    cout<<"string a is as long as string b."<<endl;
  }
} 

3.5:
#include <iostream>
#include <string>
using namespace std;

int main ()
{
  string a,s;
  while(cin>>a)
  {
    s+=a;
  }
  cout<<s<<endl;
} 
修改后：
#include <iostream>
#include <string>
using namespace std;

int main ()
{
  string a,s;
  while(cin>>a)
  {
    s+=a;
    s+=" ";
  }
  cout<<s<<endl;
} 

3.6:#include <iostream>
#include <string>
using namespace std;

int main ()
{
  string a;
  a = "hello";
  for (auto &i : a)
  {
    i = 'X';
  }
  cout<<a<<endl;
} 

3.7:无法改变字符串；

3.8:
范围for语句最为方便，不用添加局部变量；

3.9：合法，但是输出为空

3.10：
#include <iostream>
#include <string>
using namespace std;

int main ()
{
  string a;
  getline(cin,a);
  for(auto &i : a)
  {
      if(ispunct(i))
      {
      i = ' ';
      }
  }
  cout<<a<<endl;
} 

3.11:合法，c的类型是const char&;

3.12:(a)正确；
(b)不正确，svec中装载的对象是string类型，而ivec作为vector它的对象是vector<int>类型；
(c)正确；

3.13:
(a)0
(b)10个元素，值都是0；
(c)10个元素，值都是42；
(d)1个元素，值是10；
(e)2个元素，值是10和42；
(f)1个元素，值是"10"；
(g)10个元素，值是"hi";

3.14:
#include <iostream>
#include <string>
#include <vector>
using namespace std;

int main()
{
  vector<int> numbers;
  int number;
  while(cin>>number)
  {
    numbers.push_back(number);
  }
}

3.15:
#include <iostream>
#include <string>
#include <vector>
using namespace std;

int main()
{
  vector<string> strs;
  string str;
  while(cin>>str)
  {
    strs.push_back(str);
  }
}

3.16:
#include <iostream>
#include <string>
#include <vector>
using namespace std;

int main()
{
  vector<int> v1;
  vector<int> v2(10);
  vector<int> v3(10,42);
  vector<int> v4{10};
  vector<int> v5{10,42};
  vector<string> v6{10};
  vector<string> v7{10,"hi"};
  for (auto i : v5)
  {
    cout<<i<<endl;
  }
}

3.17:
// Example program
#include <iostream>
#include <string>
#include <vector>
using namespace std;

int main()
{
  vector<string> strs;
  string str;
  while(cin>>str)
  {
    strs.push_back(str);
  }
  for (auto &i : strs)
  {
    for (auto &j : i)
    {
        j = toupper(j);      
    }
    cout<<i<<endl;
  }
}

3.18:
修改为：
vector<int> ivec;
ivec.push_back(42);

3.19:
第一种：vector<int> ivec(10,42);
第二种：vector<int> ivec{42,42,42,42,42,42,42,42,42,42};
第三种：
vector<int> ivec;
for(decltype(ivec.size()) i = 0;i <= 9;i++)
{
  ivec.push_back(42);
}

3.20:
#include<iostream>
#include <vector>

using namespace std;

int main(){
    vector<int> a;
    int b;
    while(cin>>b)
    {
        a.push_back(b);
        if(cin.get()=='\n'){break;}
    }
    for(decltype(a.size()) i = 0;i < a.size();i+=2)
    {
        cout<<a[i]+a[a.size()-i-1]<<endl;
    }
    return 0;
}

3.21:
#include<iostream>
#include<vector>
#include<string>

using namespace std;

vector<int> v1;
vector<int> v2(10);
vector<int> v3(10,42);
vector<int> v4{10};
vector<int> v5{10,42};
vector<string> v6{10};
vector<string> v7{10,"hi"};

void read_int(vector<int> v)
{
    for (auto i = v.begin();i != v.end();i++){cout<<*i<<endl;}
    cout<<"---------"<<endl;
}

void read_str(vector<string> v)
{
    for (auto i = v.begin();i != v.end();i++){cout<<*i<<endl;}
    cout<<"---------"<<endl;
}

int main(){
    read_int(v1);
    read_int(v2);
    read_int(v3);
    read_int(v4);
    read_int(v5);
    read_str(v6);
    read_str(v7);
    return 0;
}

3.22:
#include<iostream>
#include<vector>
#include<string>

using namespace std;

int main(){
    vector<string> s{"Some string","Some minus one string"};
    auto text = *s.begin();
    for(auto i = text.begin();i != text.end();i++)
    {
        *i = toupper(*i);
    }
    *s.begin() = text;
    for(auto i = s.begin();i != s.end();i++){cout<<*i<<endl;}
    
}

3.23:
#include<iostream>
#include <vector>

using namespace std;

int main(){
    vector<int> a;
    int b;
    while(cin>>b)
    {
        a.push_back(b);
        if(cin.get()=='\n'){break;}
    }
    b = 1;
    for(auto i = a.begin();i < a.begin()+a.size()/2;i++)
    {
        int c = *i+*(a.end()-b);
        b++;
        cout<<c<<endl;
    }
    return 0;
}

3.25:#include<iostream>
#include <vector>

using namespace std;

int main(){
    vector<int> a(11);
    int b,c;
    while(cin>>b)
    {
        c = b/10;
        ++*(a.begin()+c);
        if(cin.get()=='\n'){break;}
    }
    for (decltype(a.size()) i = 0;i < a.size();i++)
    {
        cout<<a[i]<<endl;
    }
    return 0;
}

3.27:a,c,d非法，数组维度必须是常量或者常量表达式；字符数组元素的赋值不能是字符串；
3.28:'未知和0；
3.30:应该是0-9而不是1-10；
3.31:#include<iostream>
#include <vector>

using namespace std;

int main(){
    int a[10];
    for (int i = 0;i < 10;i++)
     {
         a[i] = i;
     }
    for(auto i:a)
    {cout<<i<<endl;}
    return 0;
}
3.32:

#include <vector>

using namespace std;

int main(){
    int a[10];
    for (int i = 0;i < 10;i++)
     {
         a[i] = i;
     }
    int b[10];
    for (int i = 0;i < 10;i++)
    {
        b[i] = a[i];
    }
    for(auto i:b)
    {cout<<i<<endl;}
    return 0;
}
3.33:数组中的元素初始值可能不是0；

3.35:
#include<iostream>
#include <vector>

using namespace std;

int main(){
    int b[3] {1,2,3};
    for(int *i = b;i<end(b);i++)
    {
        *i = 0;
    }
    for(auto i:b)
    {
        cout<<i<<endl;
    }
    return 0;
}

3.36:
#include<iostream>
#include <vector>

using namespace std;

bool ArrayEqual(int a[],int m,int b[],int n)
{
    if(m!=n){return false;}
    else{for(int i = 0;i < m;i++)
    {
        if(a[i] != b[i]){return false;}
    }
        return true;
        }
}

bool VectorEqual(vector<int> a,vector<int> b)
{
    if (a!=b) {return false;}
    else{return true;}
}

int main(){
    int b[3] {1,2,3};
    int c[3]{1,2,3};
    int a[4]{1,1,1,3};
    cout<<ArrayEqual(b, 3, c, 3)<<endl;
    cout<<ArrayEqual(a, 4, b, 3)<<endl;
}

3.40:
#include<iostream>
#include<vector>
#include<cstring>

using namespace std;

int main(){
    char a[] = "hello";
    char b[] = "world";
    char c[200];
    strcpy(c,a);
    strcat(c," ");
    strcat(c,b);
    cout<<c<<endl;
    return 0;
}

3.41:
#include<iostream>
#include<vector>
#include<cstring>

using namespace std;

int main(){
    int a[] = {1,2,3,4,5};
    vector<int> b(begin(a),end(a));
}

3.43:
#include<iostream>
#include<vector>
#include<cstring>

using namespace std;

int main(){
    int ia[3][4] = {1,2,3,4,5,6,7,8,9,10,11,12};
    for(const int (&i)[4]:ia){
        for(int j:i){cout<<j<<endl;}
    }
    for(size_t i = 0;i < 3;i++){
        for(size_t j = 0;j < 4;j++){cout<<ia[i][j]<<endl;}
    }
    for(int (*i)[4]=ia;i != end(ia);i++){
        for(int *j = begin(*i);j != end(*i);j++){cout<<*j<<endl;}
    }
    return 0;
}

3.44:
#include<iostream>
#include<vector>
#include<cstring>

using namespace std;
using int_array = int[4];

int main(){
    int ia[3][4] = {1,2,3,4,5,6,7,8,9,10,11,12};
    for(const int_array (&i):ia){
        for(int j:i){cout<<j<<endl;}
    }
    for(size_t i = 0;i < 3;i++){
        for(size_t j = 0;j < 4;j++){cout<<ia[i][j]<<endl;}
    }
    for(int_array *i=ia;i != end(ia);i++){
        for(int *j = begin(*i);j != end(*i);j++){cout<<*j<<endl;}
    }
    return 0;
}

3.45:
#include<iostream>
#include<vector>
#include<cstring>

using namespace std;
using int_array = int[4];

int main(){
    int ia[3][4] = {1,2,3,4,5,6,7,8,9,10,11,12};
    for(auto (&i):ia){
        for(auto j:i){cout<<j<<endl;}
    }
    for(auto i = 0;i < 3;i++){
        for(auto j = 0;j < 4;j++){cout<<ia[i][j]<<endl;}
    }
    for(auto *i=ia;i != end(ia);i++){
        for(auto *j = begin(*i);j != end(*i);j++){cout<<*j<<endl;}
    }
    return 0;
}

