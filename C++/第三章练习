3.1:略

3.2:#include <iostream>
#include <string>
using namespace std;

int main ()
{
  string a;
  while(getline(cin,a))
  {
      cout<<a<<endl;
  }
}
修改：
#include <iostream>
#include <string>
using namespace std;

int main ()
{
  string a;
  while(cin>>a)
  {
      cout<<a<<endl;
  }
}

3.3:string输入运算符将开头空白忽略，结尾空白作为终止信号；
getline函数将空白写入字符串，换行符号作为终止信号；

3.4:
#include <iostream>
#include <string>
using namespace std;

int main ()
{
  string a,b;
  cin>>a>>b;
  if(a>b)
  {
    cout<<a<<endl;    
  }
  else if(b>a)
  {
    cout<<b<<endl;
  }
  else
  {
    cout<<"Two strings are equal."<<endl;
  }
} 
修改后：
#include <iostream>
#include <string>
using namespace std;

int main ()
{
  string a,b;
  cin>>a>>b;
  if(a.size()>b.size())
  {
    cout<<a<<endl;    
  }
  else if(b.size()>a.size())
  {
    cout<<b<<endl;
  }
  else
  {
    cout<<"string a is as long as string b."<<endl;
  }
} 

3.5:
#include <iostream>
#include <string>
using namespace std;

int main ()
{
  string a,s;
  while(cin>>a)
  {
    s+=a;
  }
  cout<<s<<endl;
} 
修改后：
#include <iostream>
#include <string>
using namespace std;

int main ()
{
  string a,s;
  while(cin>>a)
  {
    s+=a;
    s+=" ";
  }
  cout<<s<<endl;
} 

3.6:#include <iostream>
#include <string>
using namespace std;

int main ()
{
  string a;
  a = "hello";
  for (auto &i : a)
  {
    i = 'X';
  }
  cout<<a<<endl;
} 

3.7:无法改变字符串；

3.8:
范围for语句最为方便，不用添加局部变量；

3.9：合法，但是输出为空

3.10：
#include <iostream>
#include <string>
using namespace std;

int main ()
{
  string a;
  getline(cin,a);
  for(auto &i : a)
  {
      if(ispunct(i))
      {
      i = ' ';
      }
  }
  cout<<a<<endl;
} 

3.11:合法，c的类型是const char&;

3.12:(a)正确；
(b)不正确，svec中装载的对象是string类型，而ivec作为vector它的对象是vector<int>类型；
(c)正确；

3.13:
(a)0
(b)10个元素，值都是0；
(c)10个元素，值都是42；
(d)1个元素，值是10；
(e)2个元素，值是10和42；
(f)1个元素，值是"10"；
(g)10个元素，值是"hi";

3.14:
#include <iostream>
#include <string>
#include <vector>
using namespace std;

int main()
{
  vector<int> numbers;
  int number;
  while(cin>>number)
  {
    numbers.push_back(number);
  }
}

3.15:
#include <iostream>
#include <string>
#include <vector>
using namespace std;

int main()
{
  vector<string> strs;
  string str;
  while(cin>>str)
  {
    strs.push_back(str);
  }
}

3.16:
#include <iostream>
#include <string>
#include <vector>
using namespace std;

int main()
{
  vector<int> v1;
  vector<int> v2(10);
  vector<int> v3(10,42);
  vector<int> v4{10};
  vector<int> v5{10,42};
  vector<string> v6{10};
  vector<string> v7{10,"hi"};
  for (auto i : v5)
  {
    cout<<i<<endl;
  }
}

3.17:
// Example program
#include <iostream>
#include <string>
#include <vector>
using namespace std;

int main()
{
  vector<string> strs;
  string str;
  while(cin>>str)
  {
    strs.push_back(str);
  }
  for (auto &i : strs)
  {
    for (auto &j : i)
    {
        j = toupper(j);      
    }
    cout<<i<<endl;
  }
}

3.18:
修改为：
vector<int> ivec;
ivec.push_back(42);

3.19:
vector<int> ivec(10,42);

