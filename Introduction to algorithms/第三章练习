3.1-1:
等价于证明存在正常数n,c~1~,c~2~,使得c~1~*(f(n)+g(n))<=max(f(n),g(n))<=c~2~*(f(n)+g(n))成立；
对于渐进非负函数f(n),g(n)来说，f(n)+g(n)<=2*max(f(n),g(n))始终成立->(f(n)+g(n))/2<=max(f(n),g(n));
同时我们有max(f(n),g(n))<=f(n)+g(n)；
因此我们可以得到f(n)+g(n))/2<=max(f(n),g(n))<=f(n)+g(n),即存在正整数n,c~1~=1/2,c~2~=1，使得待求证式成立；

3.1-2:
等价于证明存在正常数n,c~1~,c~2~,使得c~1~*n^b<=(n+a)^b<=c~2~*n^b成立；
n+a<=n+|a|->当|a|<=n时，n+a<=2n;
n+a>=n-|a|->当|a|<=n/2时，n+a>=n/2;
综上所述，n>=2|a|>=|a|时，有(1/2)^b*n^b<=(n+a)^b<=2^b*n^b;
所以(n+a)^b=theta(n^b);

3.1-3:
O(n^2)的定义是，存在正常数n,c，使得0<=f(n)<cn^2，f(n)是可以取到0的，而对一个算法的运行时间来说，至少是0这样的表述毫无意义。

3.1-4:
1*2^n<=2^(n+1)<=3*2^n;
当a>1时，a^2>a;

3.1-5:
证明：已知f(n)=theta(g(n)),可得存在正常量n,c~1~,c~2~，有0<=c~1~*g(n)<=f(n)<=c~2~*g(n);
由0<=c~1~*g(n)<=f(n)可得f(n)=Ω(g(n)),由0<=f(n)<=c~2~*g(n)可得f(n)=O(g(n));
因此有f(n)=theta(g(n))时有f(n)=Ω(g(n))且f(n)=O(g(n));

接下来证明f(n)=Ω(g(n))且f(n)=O(g(n))情况下，可得f(n)=theta(g(n));证明过程略
综上所述，可得f(n)=theta(g(n))只有在当且仅当f(n)=Ω(g(n))且f(n)=O(g(n))成立；

3.1-6：
证明：假设算法运行时间T关于输入规模n的函数为T(n)，则有T(n)=theta(g(n))，此时最坏情况满足
存在正常量n,c~1,T(n)<=c~1~*g(n),即最坏情况运行时间为O(g(n))，同理可证最好情况为Ω(g(n))；这样我们就
证明了充分性；接下来证明必要性的过程省略；

3.1-7:
o(g(n)):存在正常量n,c，使得0≤f(n)<c*g(n)成立；
𝛚(g(n)):存在正常量n,c，使得0≤c*g(n)<f(n成立；
由于都是开区间，所以两个区间相交运算得空集；

3.1-8：
类似可得，Ω(g(n,m))={f(n,m):存在正常量c,n~0~和m~0~，使得对所有n≥n~0~或m≥m~0~，有0≤g(n,m)<f(n,m);
theta(g(n,m))={f(n,m):存在正常量c、n~0~和m~0~，使得对所有的n≥n~0~或m≥m~0~，有0≤f(n,m)≤c*g(n,m)}
